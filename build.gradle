plugins {
  id 'org.xtext.xtend' version '2.0.5'
  id 'java'
  id 'eclipse'
  id 'maven'
  id 'application'
}

repositories {
  maven {
    url "https://ubc-stat-ml.github.io/artifacts/"
  }
  maven {
    url "http://www.stat.ubc.ca/~bouchard/maven/"
  }
  jcenter()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

xtend {
  generator{
    javaSourceLevel = 1.8
  }
}

configurations.archives.with {
  artifacts.remove artifacts.find { it.file =~ 'tar' }
  artifacts.remove artifacts.find { it.file =~ 'zip' }
}

uploadArchives {
  repositories.mavenDeployer {
    repository(url: "file:///Users/bouchard/artifacts/")
    pom.version = "3.2.0"
    pom.artifactId = "inits"
    pom.groupId = "ca.ubc.stat"
  }
}

eclipse { 
  classpath {
    defaultOutputDir = file('bin')
  }
}

repositories {
  mavenCentral()
  jcenter()
  maven {
    url "https://ubc-stat-ml.github.io/artifacts/"
  }
  maven {
    url "https://www.stat.ubc.ca/~bouchard/maven/"
  }
}

dependencies {
  compile group: 'com.google.guava', name: 'guava', version: '19.0'
  testCompile group: 'junit', name: 'junit', version: '4.12'
  compile group: 'junit', name: 'junit', version: '4.12'
  compile "ca.ubc.stat.blang:ca.ubc.stat.blang:4.0.0"
  compile group: 'ca.ubc.stat', name: 'bayonet', version: '4.1.0' 
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
  compile 'com.google.code.gson:gson:2.7'
  compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.16.0'
  compile group: 'ca.ubc.stat', name: 'briefj', version: '2.6.1'
  compile group: 'org.apache.commons', name: 'commons-csv', version: '1.4'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

def createScript(project, mainClass, name) {
  project.tasks.create(name: name, type: CreateStartScripts) {
    outputDir       = new File(project.buildDir, 'scripts')
    mainClassName   = mainClass
    applicationName = name
    classpath       = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
  }
  project.tasks[name].dependsOn(project.jar)

  project.applicationDistribution.with {
    into("bin") {
      from(project.tasks[name])
      fileMode = 0755
    }
  }
}

startScripts.enabled = false
run.enabled = false

createScript(project, 'blang.inits.experiments.doc.OrganizeExperimentsHTMLDoc', 'organize-experiments')
createScript(project, 'blang.inits.experiments.doc.ExperimentHTMLDoc',          'experiment-html-doc')


artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        //noinspection SpellCheckingInspection
        tasks.withType(Javadoc) {
            // disable the crazy super-strict doclint tool in Java 8
            //noinspection SpellCheckingInspection
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}


